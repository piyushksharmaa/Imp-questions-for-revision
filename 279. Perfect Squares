class Solution {
public:
    long long int dp[10001];
    long long int solver(int n){
        if(n==0){
            return 0;
        }
        if(dp[n]!=-1){
            return dp[n];
        }
        long long int ans=n;
        for(long long int i=1;i*i<=n;i++){
            ans=min(ans,1+solver(n-(i*i)));
        }
        return dp[n]=ans;
    }
    int solver1(int n){
        vector<int> vec(n+1,INT_MAX);
        vec[0]=0;
        for(int i=1;i<=n;i++){    // Here i denotes target
            for(int j=1;j*j<=i;j++){   
                int temp=j*j;
                if(i-temp>=0){
                    vec[i]=min(vec[i],1+vec[i-temp]);    
                }
            }
        }
        return vec[n];
    }
    int numSquares(int n) {
        // memset(dp,-1,sizeof(dp));
        return solver1(n);
    }
};
