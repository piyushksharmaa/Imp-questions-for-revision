/*
If a=b
, the fans can get an infinite amount of excitement, and we can achieve this by applying the first operation infinite times.

Otherwise, the maximum excitement the fans can get is g=|a−b|
and the minimum number of moves required to achieve it is min(amodg,g−amodg).

Without loss of generality, assume a>b otherwise we can swap a and b
. We know that GCD(a,b)=GCD(a−b,b)
. Notice that no matter how many times we apply any operation, the value of a−b
 does not change. We can arbitrarily change the value of b
 to a multiple of a−b
 by applying the operations. In this way, we can achieve a GCD
 equal to a−b
. Now, since GCD(x,y)≤min(x,y)
 for any positive x
 and y
, GCD(a−b,b)
 can never exceed a−b
. So, we cannot achieve a higher GCD by any means.

To achieve the required GCD
, we need to make b
 a multiple of g=a−b
 using as few operations as possible. There are two ways to do so −
 decrease b
 to the largest multiple of g
 less than or equal to b
 or increase b
 to the smallest multiple of g
 greater than b
. The number of operations required to do so are bmodg
 and g−bmodg
 respectively. We will obviously choose the minimum of the two. Also notice that amodg=bmodg
 since a=b+g
. So, it doesn't matter if we use either a
 or b
 to determine the minimum number of operations.
*/



#include<bits/stdc++.h>
using namespace std;
#define ll long long 
#define mod 1000000007
int main(){
	ios_base::sync_with_stdio(false), cin.tie(NULL), cout.tie(NULL);
	ll t,a,b;
	cin>>t;
	while(t--){
		cin>>a>>b;
		if(a==b){cout<<"0 0"<<endl;continue;}
		ll diff=abs(b-a);
		ll res=INT_MAX;
		if(a>b){
			swap(a,b);
		}
		res=min(a%diff,diff-a%diff);
		cout<<diff<<" "<<res<<endl;
	}
}
